--Tạo cơ sở dữ liệu
CREATE DATABASE QLDT
GO

USE QLDT
GO

--Tạo bảng và các khóa
CREATE TABLE SINHVIEN (
	MSSV CHAR(8),
	TENSV NVARCHAR(30) NOT NULL,
	SODT VARCHAR(10),
	LOP CHAR(10) NOT NULL,
	DIACHI NCHAR(50) NOT NULL,
	CONSTRAINT PK_SV PRIMARY KEY(MSSV)
)

CREATE TABLE DETAI (
	MSDT CHAR(6),
	TENDT NVARCHAR(30) NOT NULL,
	CONSTRAINT PK_DT PRIMARY KEY(MSDT)
)

CREATE TABLE SV_DETAI (
	MSSV CHAR(8),
	MSDT CHAR(6),
	CONSTRAINT PK_SV_DT PRIMARY KEY(MSSV, MSDT),
	CONSTRAINT FK01_SV_DT FOREIGN KEY(MSSV) REFERENCES SINHVIEN(MSSV),
	CONSTRAINT FK02_SV_DT FOREIGN KEY(MSDT) REFERENCES DETAI(MSDT)
)

CREATE TABLE HOCHAM (
	MSHH INT,
	TENHH NVARCHAR(20) NOT NULL,
	CONSTRAINT PK_HH PRIMARY KEY(MSHH)
)

CREATE TABLE GIAOVIEN (
	MSGV INT,
	TENGV NVARCHAR(30) NOT NULL,
	DIACHI NVARCHAR(50) NOT NULL,
	SODT VARCHAR(10) NOT NULL,
	MSHH INT,
	NAMHH SMALLDATETIME NOT NULL,
	CONSTRAINT PK_GV PRIMARY KEY(MSGV),
	CONSTRAINT FK_GV FOREIGN KEY(MSHH) REFERENCES HOCHAM(MSHH),
)

CREATE TABLE HOCVI (
	MSHV INT,
	TENHV NVARCHAR(20) NOT NULL,
	CONSTRAINT PK_HV PRIMARY KEY(MSHV)
)

CREATE TABLE CHUYENNGANH (
	MSCN INT,
	TENCN NVARCHAR(30) NOT NULL,
	CONSTRAINT PK_CN PRIMARY KEY(MSCN)
)

CREATE TABLE GV_HV_CN (
	MSGV INT,
	MSHV INT,
	MSCN INT,
	NAM	SMALLDATETIME NOT NULL,
	CONSTRAINT PK_GV_HV_CN PRIMARY KEY(MSGV, MSHV, MSCN),
	CONSTRAINT FK01_GV_HV_CN FOREIGN KEY(MSGV) REFERENCES GIAOVIEN(MSGV),
	CONSTRAINT FK02_GV_HV_CN FOREIGN KEY(MSHV) REFERENCES HOCVI(MSHV),
	CONSTRAINT FK03_GV_HV_CN FOREIGN KEY(MSCN) REFERENCES CHUYENNGANH(MSCN)
)

CREATE TABLE GV_HDDT (
	MSGV INT,
	MSDT CHAR(6),
	DIEM FLOAT NOT NULL,
	CONSTRAINT PK_GV_HDDT PRIMARY KEY(MSGV, MSDT),
	CONSTRAINT FK01_GV_HDDT FOREIGN KEY(MSGV) REFERENCES GIAOVIEN(MSGV),
	CONSTRAINT FK02_GV_HDDT FOREIGN KEY(MSDT) REFERENCES DETAI(MSDT)
)

CREATE TABLE GV_PBDT (
	MSGV INT,
	MSDT CHAR(6),
	DIEM FLOAT NOT NULL,
	CONSTRAINT PK_GV_PBDT PRIMARY KEY(MSGV, MSDT),
	CONSTRAINT FK01_GV_PBDT FOREIGN KEY(MSGV) REFERENCES GIAOVIEN(MSGV),
	CONSTRAINT FK02_GV_PBDT FOREIGN KEY(MSDT) REFERENCES DETAI(MSDT)
)

CREATE TABLE GV_UVDT (
	MSGV INT,
	MSDT CHAR(6),
	DIEM FLOAT NOT NULL,
	CONSTRAINT PK_GV_UVDT PRIMARY KEY(MSGV, MSDT),
	CONSTRAINT FK01_GV_UVDT FOREIGN KEY(MSGV) REFERENCES GIAOVIEN(MSGV),
	CONSTRAINT FK02_GV_UVDT FOREIGN KEY(MSDT) REFERENCES DETAI(MSDT)
)

CREATE TABLE HOIDONG (
	MSHD INT,
	PHONG INT,
	TGBD SMALLDATETIME,
	NGAYHD SMALLDATETIME NOT NULL,
	TINHTRANG NVARCHAR(30) NOT NULL,
	MSGV INT,
	CONSTRAINT PK_HOIDONG PRIMARY KEY(MSHD),
	CONSTRAINT FK_HOIDONG FOREIGN KEY(MSGV) REFERENCES GIAOVIEN(MSGV),
)

CREATE TABLE HOIDONG_GV (
	MSHD INT,
	MSGV INT,
	CONSTRAINT PK_HOIDONG_GV PRIMARY KEY(MSHD, MSGV),
	CONSTRAINT FK01_HOIDONG_GV FOREIGN KEY(MSHD) REFERENCES HOIDONG(MSHD),
	CONSTRAINT FK02_HOIDONG_GV FOREIGN KEY(MSGV) REFERENCES GIAOVIEN(MSGV)
)

--Nhập dữ liệu
CREATE TABLE HOIDONG_DT (
	MSHD INT,
	MSDT CHAR(6),
	QUYETDINH NCHAR(10),
	CONSTRAINT PK_HOIDONG_DT PRIMARY KEY(MSHD, MSDT),
	CONSTRAINT FK01_HOIDONG_DT FOREIGN KEY(MSHD) REFERENCES HOIDONG(MSHD),
	CONSTRAINT FK02_HOIDONG_DT FOREIGN KEY(MSDT) REFERENCES DETAI(MSDT)
)

--Cài đặt thời gian
SET DATEFORMAT DMY

--Nhập dữ liệu
INSERT INTO SINHVIEN VALUES ('13520001', N'Nguyễn Văn An', '0906762255', 'SE103.U32', N'THỦ ĐỨC')
INSERT INTO SINHVIEN VALUES ('13520002', N'Phan Tấn Đạt', '0975672350', 'IE204.T21', N'QUẬN 1')
INSERT INTO SINHVIEN VALUES ('13520003', N'Nguyễn Anh Hải', '0947578688', 'IE205.R12', N'QUẬN 9')
INSERT INTO SINHVIEN VALUES ('13520004', N'Phạm Tài', '0956757869', 'IE202.A22', N'QUẬN 1')
INSERT INTO SINHVIEN VALUES ('13520005', N'Lê Thúy Hằng', '0976668688', 'SE304.E22', N'THỦ ĐỨC')
INSERT INTO SINHVIEN VALUES ('13520006', N'Ưng Hồng Ân', '0957475898', 'IE208.F33', N'QUẬN 2')

INSERT INTO DETAI VALUES ('97001', N'Quản lý thư viện')
INSERT INTO DETAI VALUES ('97002', N'Nhận dạng vân tay')
INSERT INTO DETAI VALUES ('97003', N'Bán đấu giá trên mạng')
INSERT INTO DETAI VALUES ('97004', N'Quản lý siêu thị')															  
INSERT INTO DETAI VALUES ('97005', N'Xử lý ảnh')																		  
INSERT INTO DETAI VALUES ('97006', N'Hệ giải toán thông minh')															  
																  									   
INSERT INTO SV_DETAI VALUES ('13520001', '97004')
INSERT INTO SV_DETAI VALUES ('13520002', '97005')
INSERT INTO SV_DETAI VALUES ('13520003', '97001')
INSERT INTO SV_DETAI VALUES ('13520004', '97002')
INSERT INTO SV_DETAI VALUES ('13520005', '97003')
INSERT INTO SV_DETAI VALUES ('13520006', '97005')

INSERT INTO HOCHAM VALUES (1, 'PHÓ GIÁO SƯ')
INSERT INTO HOCHAM VALUES (2, 'GIÁO SƯ')

INSERT INTO GIAOVIEN VALUES (00201, N'Trần Trung', N'Bến Tre', '35353535', 1, '1996')
INSERT INTO GIAOVIEN VALUES (00202, N'Nguyễn Văn An', N'Tiền Giang', '67868688', 1, '1996')
INSERT INTO GIAOVIEN VALUES (00203, N'Trần Thu Trang', N'Cần Thơ', '74758687', 1, '1996')
INSERT INTO GIAOVIEN VALUES (00204, N'Nguyễn Thị Loan', N'TP. HCM', '56575868', 2, '2005')
INSERT INTO GIAOVIEN VALUES (00205, N'Chu Tiến', N'Hà Nội', '46466646', 2, '2005')

INSERT INTO HOCVI VALUES (1, N'Kỹ sư')
INSERT INTO HOCVI VALUES (2, N'Cử nhân')
INSERT INTO HOCVI VALUES (3, N'Thạc sĩ')
INSERT INTO HOCVI VALUES (4, N'Tiến sĩ')
INSERT INTO HOCVI VALUES (5, N'Tiến sĩ Khoa học')

INSERT INTO CHUYENNGANH VALUES (1, N'Công nghệ Web')
INSERT INTO CHUYENNGANH VALUES (2, N'Mạng xã hội')
INSERT INTO CHUYENNGANH VALUES (3, N'Quản lý CNTT')
INSERT INTO CHUYENNGANH VALUES (4, N'GIS')

INSERT INTO GV_HV_CN VALUES (00201, 1, 1, '2013')
INSERT INTO GV_HV_CN VALUES (00201, 1, 2, '2013')
INSERT INTO GV_HV_CN VALUES (00201, 2, 1, '2014')
INSERT INTO GV_HV_CN VALUES (00202, 3, 2, '2013')
INSERT INTO GV_HV_CN VALUES (00203, 2, 4, '2014')
INSERT INTO GV_HV_CN VALUES (00204, 3, 2, '2014')

INSERT INTO GV_HDDT VALUES(00201, '97001', 8)
INSERT INTO GV_HDDT VALUES(00202, '97002', 7)
INSERT INTO GV_HDDT VALUES(00205, '97001', 9)
INSERT INTO GV_HDDT VALUES(00204, '97004', 7)
INSERT INTO GV_HDDT VALUES(00203, '97005', 9)

INSERT INTO GV_PBDT VALUES (00201, '97005', 8)
INSERT INTO GV_PBDT VALUES (00202, '97001', 7)
INSERT INTO GV_PBDT VALUES (00205, '97004', 9)
INSERT INTO GV_PBDT VALUES (00204, '97003', 7)
INSERT INTO GV_PBDT VALUES (00203, '97002', 9)

INSERT INTO GV_UVDT VALUES (00205, '97005', 8)
INSERT INTO GV_UVDT VALUES (00202, '97005', 7)
INSERT INTO GV_UVDT VALUES (00204, '97005', 9)
INSERT INTO GV_UVDT VALUES (00203, '97001', 7)
INSERT INTO GV_UVDT VALUES (00204, '97001', 9)
INSERT INTO GV_UVDT VALUES (00205, '97001', 8)
INSERT INTO GV_UVDT VALUES (00203, '97003', 7)
INSERT INTO GV_UVDT VALUES (00201, '97003', 9)
INSERT INTO GV_UVDT VALUES (00202, '97003', 7)
INSERT INTO GV_UVDT VALUES (00201, '97004', 9)
INSERT INTO GV_UVDT VALUES (00202, '97004', 8)
INSERT INTO GV_UVDT VALUES (00203, '97004', 7)
INSERT INTO GV_UVDT VALUES (00201, '97002', 9)
INSERT INTO GV_UVDT VALUES (00204, '97002', 7)
INSERT INTO GV_UVDT VALUES (00205, '97002', 9)
INSERT INTO GV_UVDT VALUES (00201, '97006', 9)
INSERT INTO GV_UVDT VALUES (00202, '97006', 7)
INSERT INTO GV_UVDT VALUES (00204, '97006', 9)

INSERT INTO HOIDONG VALUES (1, 002,'7:00', '29/11/2014', N'Thật', 00201)
INSERT INTO HOIDONG VALUES (2, 102,'7:00', '5/12/2014', N'Thật', 00202)
INSERT INTO HOIDONG VALUES (3, 003,'8:00', '6/12/2014', N'Thật', 00203)

INSERT INTO HOIDONG_GV VALUES (1, 00201)
INSERT INTO HOIDONG_GV VALUES (1, 00202)
INSERT INTO HOIDONG_GV VALUES (1, 00203)
INSERT INTO HOIDONG_GV VALUES (1, 00204)
INSERT INTO HOIDONG_GV VALUES (2, 00203)
INSERT INTO HOIDONG_GV VALUES (2, 00202)
INSERT INTO HOIDONG_GV VALUES (2, 00205)
INSERT INTO HOIDONG_GV VALUES (2, 00204)
INSERT INTO HOIDONG_GV VALUES (3, 00201)
INSERT INTO HOIDONG_GV VALUES (3, 00202)
INSERT INTO HOIDONG_GV VALUES (3, 00203)
INSERT INTO HOIDONG_GV VALUES (3, 00204)

INSERT INTO HOIDONG_DT VALUES (1, '97001', N'Được')
INSERT INTO HOIDONG_DT VALUES (1, '97002', N'Được')
INSERT INTO HOIDONG_DT VALUES (2, '97001', N'Không')
INSERT INTO HOIDONG_DT VALUES (2, '97004', N'Không')
INSERT INTO HOIDONG_DT VALUES (1, '97005', N'Được')
INSERT INTO HOIDONG_DT VALUES (3, '97001', N'Không')
INSERT INTO HOIDONG_DT VALUES (3, '97002', N'Được')

--A. STORED PROCEDUREDS VỚI THAM SỐ VÀO
--1. Tham số vào là MSGV, TENGV, SODT, DIACHI, MSHH, NAMHH. 
--Trước khi insert dữ liệu cần kiểm tra MSHH đã tồn tại trong table HOCHAM chưa,
--nếu chưa thì trả về giá trị 0.
CREATE PROCEDURE PROC_INSERT_GV_MSHH
--DS THAM SỐ
	@MSGV INT, @TENGV NVARCHAR(30), @SODT NVARCHAR(10), @DIACHI NVARCHAR(50), @MSHH INT, @NAMHH SMALLDATETIME
AS
BEGIN
--LOGIC
	IF EXISTS (SELECT * FROM HOCHAM WHERE MSHH = @MSHH)
		BEGIN
			INSERT INTO GIAOVIEN VALUES (@MSGV, @TENGV, @SODT, @DIACHI, @MSHH, @NAMHH)
			PRINT N'THÀNH CÔNG'
		END
	ELSE
		BEGIN
			RETURN 0
			PRINT N'MSHH CHƯA TỒN TẠI'
		END
END

--1.1 THỰC THI
EXEC PROC_INSERT_GV_MSHH 00209, N'Đỗ Phúc', N'Huế', '0987654321', 2, '2022'

--1.2 KIỂM TRA
SELECT * FROM GIAOVIEN

--1.3 KHÔI PHỤC DỮ LIỆU
DELETE FROM GIAOVIEN WHERE MSGV = 00209

--1.4 XÓA
DROP PROC PROC_INSERT_GV_MSHH

--2. Tham số vào là MSGV, TENGV, SODT, DIACHI, MSHH, NAMHH. 
--Trước khi insert dữ liệu cần kiểm tra MSGV trong table GIAOVIEN có trùng không,
--nếu trùng thì trả về giá trị 0.
CREATE PROCEDURE PROC_INSERT_GV_MSGV
	@MSGV INT, @TENGV NVARCHAR(30), @SODT NVARCHAR(10), @DIACHI NVARCHAR(50), @MSHH INT, @NAMHH SMALLDATETIME
AS
BEGIN
	IF NOT EXISTS (SELECT * FROM GIAOVIEN WHERE MSGV = @MSGV)
		BEGIN
			INSERT INTO GIAOVIEN VALUES (@MSGV, @TENGV, @SODT, @DIACHI, @MSHH, @NAMHH)
			PRINT N'THÀNH CÔNG'
		END
	ELSE
		BEGIN
			RETURN 0
			PRINT N'MSGV BỊ TRÙNG'
		END
END

--2.1 THỰC THI
EXEC PROC_INSERT_GV_MSGV 00201,'Trần Trung','Bến Tre','35353535',3,'1996'

--2.2 KIỂM TRA
SELECT * FROM GIAOVIEN

--2.3 KHÔI PHỤC DỮ LIỆU
DELETE FROM GIAOVIEN WHERE MSGV = 00201

--2.4 XÓA
DROP PROC PROC_INSERT_GV_MSGV

--3. Giống (1) và (2) kiểm tra xem MSGV có trùng không? MSHH có tồn tại chưa? 
--Nếu MSGV trùng thì trả về 0. Nếu MSHH chưa tồn tại trả về 1, 
--ngược lại cho insert dữ liệu.
CREATE PROCEDURE PROC_INSERT_GV_3
	@MSGV INT, @TENGV NVARCHAR(30), @SODT NVARCHAR(10), @DIACHI NVARCHAR(50), @MSHH INT, @NAMHH SMALLDATETIME
AS
BEGIN
	IF EXISTS (SELECT * FROM GIAOVIEN WHERE MSGV = @MSGV)
		BEGIN
			RETURN 0
			PRINT N'MSGV BỊ TRÙNG'
		END
	ELSE
		BEGIN
			IF EXISTS(SELECT * FROM HOCHAM WHERE MSHH = @MSHH)
				BEGIN
					INSERT INTO GIAOVIEN VALUES(@MSGV, @TENGV, @DIACHI, @SODT, @MSHH, @NAMHH)
					PRINT N'THÀNH CÔNG'
				END
			ELSE
				BEGIN
					RETURN 1
					PRINT N'MSHH CHƯA TỒN TẠI'
				END
		END
END

--3.1 THỰC THI
EXEC PROC_INSERT_GV_3 00209,'Trần Trung','Bến Tre','35353535',3,'1996'
EXEC PROC_INSERT_GV_3 00354,N'Chu Tiến',N'ĐÀ NẴNG','01234756897',3,'2012'
EXEC PROC_INSERT_GV_3 00354,N'Thu An',N'ĐÀ NẴNG','01234756897',1,'2012'

--3.2 KIỂM TRA
SELECT * FROM GIAOVIEN

--3.3 KHÔI PHỤC DỮ LIỆU
DELETE FROM GIAOVIEN WHERE MSGV = 00209

--3.4 XÓA
DROP PROC PROC_INSERT_GV_3

--4. Đưa vào MSDT cũ, TENDT mới. Hãy cập nhật tên đề tài mới với mã đề tài cũ không đổi 
--nếu không tìm thấy trả về 0, ngược lại cập nhật và trả về 1.
CREATE PROCEDURE PROC_UPDATE_DT_MSDT
	@MSDT CHAR(6), @TENDT NVARCHAR(30)
AS
BEGIN
	IF EXISTS (SELECT * FROM DETAI WHERE MSDT = @MSDT)
		BEGIN
			UPDATE DETAI
			SET TENDT = @TENDT
			RETURN 1
		END
	ELSE
		BEGIN
			RETURN 0
			PRINT 'KHÔNG TÌM THẤY'
		END
END

--4.1 THỰC THI
EXEC PROC_UPDATE_DT_MSDT 97001, N'Quản lý thông tin' 

--4.2 KIỂM TRA
SELECT * FROM DETAI

--4.3 KHÔI PHỤC DỮ LIỆU
DELETE FROM DETAI WHERE MSDT = 97001

--4.4 XÓA
DROP PROC PROC_UPDATE_DT_MSDT

--5. Tham số đưa vào MSSV, TENSV mới, DIACHI mới thủ lục dùng để cập nhật sinh viên trên, 
--nếu không tìm thấy trả về 0, ngược lại cập nhật và trả về 1.
CREATE PROCEDURE PROC_UPDATE_DT_MSSV
	@MSSV CHAR(8), @TENSV NVARCHAR(30), @SODT VARCHAR(10), @LOP CHAR(10),  @DIACHI NCHAR(50)
AS
BEGIN
	IF EXISTS (SELECT * FROM SINHVIEN WHERE MSSV = @MSSV)
		BEGIN
			UPDATE SINHVIEN
			SET TENSV = @TENSV
			RETURN 1
		END
	ELSE
		BEGIN
			RETURN 0
			PRINT 'KHÔNG TÌM THẤY'
		END
END	

--5.1 THỰC THI
EXEC PROC_UPDATE_DT_MSSV 13520005 , N'Lê Thúy Vân', '0976668688', 'SE304.E22', N'THỦ ĐỨC'

--5.2 KIỂM TRA
SELECT * FROM SINHVIEN

--5.3 KHÔI PHỤC DỮ LIỆU
DELETE FROM SINHVIEN WHERE MSSV = 13520005

--5.4 XÓA
DROP PROC PROC_UPDATE_DT_MSSV



--B. STORED PROCEDUREDS VỚI THAM SỐ VÀO VÀ RA
--1. Đưa vào TENHV trả ra: Số GV thỏa học vị, nếu không tìm thấy trả về 0.
CREATE PROCEDURE PROC_UPDATE_BY_MSHV
	@TENHV NVARCHAR(20), @SLGV INT OUTPUT
AS
BEGIN
	IF EXISTS (SELECT * FROM HOCVI WHERE TENHV = @TENHV)
		BEGIN
			--ĐẾM
			SELECT @SLGV = COUNT(*)
			FROM HOCVI, GV_HV_CN
			WHERE HOCVI.MSHV = GV_HV_CN.MSHV AND TENHV = @TENHV
		END
	ELSE
		BEGIN
			SET @SLGV = 0
		END
END

--1.1 THỰC THI VÀ KIỂM TRA	
DECLARE @TENHV NVARCHAR(20), @SLGV INT
SET @TENHV = N'Thạc sĩ'

EXEC PROC_UPDATE_BY_MSHV @TENHV, @SLGV OUTPUT
PRINT N'SỐ GV CÓ HỌC VỊ ' + @TENHV + N' LÀ: ' + CAST(@SLGV AS NVARCHAR)

--1.2 XÓA
DROP PROC PROC_UPDATE_BY_MSHV

--2. Đưa vào MSDT cho biết: Điểm trung bình của đề tài, nếu không tìm thấy trả về 0.
CREATE PROCEDURE PROC_MSDT_DTB
	@MSDT CHAR(6), @DTB INT OUTPUT
AS
BEGIN
	IF EXISTS (SELECT * FROM DETAI WHERE MSDT = @MSDT)
		BEGIN
			SELECT @DTB = AVG (GV_HDDT.DIEM + GV_PBDT.DIEM + GV_UVDT.DIEM) / 3
			FROM DETAI,GV_HDDT,GV_PBDT,GV_UVDT
			WHERE DETAI.MSDT = GV_HDDT.MSDT
				AND DETAI.MSDT = GV_PBDT.MSDT
				AND DETAI.MSDT = GV_UVDT.MSDT
				AND DETAI.MSDT = @MSDT
		END
	ELSE
		BEGIN
			PRINT N'KHÔNG TÌM THẤY'
			RETURN 0
		END
END

--2.1 THỰC THI VÀ KIỂM TRA	
DECLARE @MSDT CHAR(6), @DTB INT
SET @MSDT = '97001'

EXEC PROC_MSDT_DTB @MSDT, @DTB OUTPUT
PRINT N'ĐIỂM TB CỦA ĐỀ TÀI ' + @MSDT + N' là: ' + CAST(@DTB AS NVARCHAR)

--2.2 XÓA
DROP PROC PROC_MSDT_DTB

--3. Đưa vào TENGV trả ra: SDT của giáo viên đó, nếu không tìm thấy trả về 0.
--Nếu trùng tên thì có báo lỗi không? Tại sao? 
--Làm sao để hiện thông báo có bao nhiêu giáo viên trùng tên và trả về các SDT.
CREATE PROCEDURE PROC_TENGV_SDT
	@TENGV NVARCHAR(30) OUTPUT
AS
BEGIN
	DECLARE @SODT VARCHAR(10);
	DECLARE @COUNT INT;
	SET @COUNT = (SELECT COUNT(*) FROM GIAOVIEN WHERE TENGV = @TENGV);
	IF @COUNT > 1
    BEGIN
        RAISERROR ('Có %d giáo viên trùng tên', 0, 1, @COUNT)
        SELECT SODT FROM GIAOVIEN WHERE TENGV = @TENGV
    END
    ELSE IF @COUNT = 1
    BEGIN
        SELECT SODT FROM GIAOVIEN WHERE TENGV = @TENGV
    END
    ELSE
    BEGIN
        SELECT 0 AS SODT
		PRINT N'KHÔNG TÌM THẤY'
    END
END

--3.1 THỰC THI VÀ KIỂM TRA	
DECLARE @TENGV NVARCHAR(30),@SODT VARCHAR(10) 
SET @TENGV = N'Chu Tiến'

EXEC PROC_TENGV_SDT @TENGV ,@SODT OUTPUT

--3.2 XÓA
DROP PROC PROC_TENGV_SDT

--4. Đưa vào MSHD cho biết: Điểm trung bình các đề tài của hội đồng đó.
CREATE PROCEDURE PROC_MSHD_DTB
	@MSHD INT, @DTB INT OUTPUT
AS
BEGIN
	IF EXISTS(SELECT * FROM HOIDONG WHERE MSHD = @MSHD)
		BEGIN
			SELECT @DTB = AVG (GV_HDDT.DIEM + GV_PBDT.DIEM + GV_UVDT.DIEM) / 3
			FROM HOIDONG,GV_HDDT,GV_PBDT,GV_UVDT
			WHERE HOIDONG.MSGV = GV_HDDT.MSGV
				AND HOIDONG.MSGV = GV_PBDT.MSGV
				AND HOIDONG.MSGV = GV_UVDT.MSGV
				AND HOIDONG.MSHD = @MSHD
		END
	ELSE
		BEGIN
			RETURN 0
			PRINT N'KHÔNG TÌM THẤY'
		END
END

--4.1 THỰC THI VÀ KIỂM TRA	
DECLARE @MSHD NVARCHAR, @DTB INT
SET @MSHD = '1'

EXEC PROC_MSHD_DTB @MSHD, @DTB OUTPUT
PRINT N'Điếm trung bình của các đề tài ' + @MSHD + N' là: ' + CAST(@DTB AS NVARCHAR)

--4.2 XÓA
DROP PROC PROC_MSHD_DTB

--5*. Đưa vào TENGV cho biết: Số đề tài hướng dẫn, số đề tài phản biện do giáo viên đó phụ trách. 
--Nếu trùng tên thì có báo lỗi không hay hệ thống sẽ đếm tất cả các đề tài của những giáo viên trùng tên đó?
CREATE PROCEDURE PROC_TENGV_SODTHD_SODTPB
	@TENGV NVARCHAR(30),@SODTHD INT OUTPUT,@SODTPB INT OUTPUT
AS
BEGIN
	IF EXISTS(SELECT * FROM GIAOVIEN WHERE TENGV = @TENGV)
		BEGIN
			SELECT @SODTHD = COUNT(*) 
			FROM GIAOVIEN,GV_HDDT
			WHERE GIAOVIEN.MSGV = GV_HDDT.MSGV AND TENGV = @TENGV

			SELECT @SODTPB = COUNT(*)
			FROM GIAOVIEN,GV_PBDT
			WHERE GIAOVIEN.MSGV = GV_PBDT.MSGV AND TENGV = @TENGV
		END
END

--5.1 THỰC THI VÀ KIỂM TRA
DECLARE @TENGV NVARCHAR(30), @SODTHD INT, @SODTPB INT
SET @TENGV = N'Chu Tiến'

EXEC PROC_TENGV_SODTHD_SODTPB  @TENGV, @SODTHD OUTPUT,@SODTPB OUTPUT
PRINT N'Số đề tài hướng dẫn: ' + CAST(@SODTHD AS NVARCHAR) + N',số đề tài phản biện: ' + CAST(@SODTPB AS NVARCHAR)

--5.2 XÓA
DROP PROC PROC_TENGV_SODTHD_SODTPB

GO



--C. TRIGGER
--1. Tạo Trigger thỏa mãn điều kiện khi xóa một đề tài sẽ xóa các thông tin liên quan.
--(Vướng ràng buộc khóa ngoại)
--(Giải pháp: vô hiệu hóa trong begin end bằng alter table) 
CREATE TRIGGER TRIG_DELETE_DETAI ON DETAI
INSTEAD OF  DELETE
AS
BEGIN
	DELETE FROM HOIDONG_DT WHERE MSDT IN (SELECT MSDT FROM deleted)
	DELETE FROM GV_HDDT WHERE MSDT IN (SELECT MSDT FROM deleted)
	DELETE FROM GV_PBDT WHERE MSDT IN (SELECT MSDT FROM deleted)
	DELETE FROM GV_UVDT WHERE MSDT IN (SELECT MSDT FROM deleted)
	DELETE FROM SV_DETAI WHERE MSDT IN (SELECT MSDT FROM deleted)
	DELETE FROM DETAI WHERE MSDT = '97001'
END

--1.1 THỰC THI
DELETE FROM DETAI WHERE MSDT = '97001'

--1.2 XÓA
DROP TRIGGER TRIG_DELETE_DETAI

GO

--2. Tạo Trigger thỏa mãn ràng buộc là một hội đồng không quá 10 đề tài. 
--Dùng “Group by” có được không? Giải thích.
CREATE TRIGGER TRIG_INSERT_HDDT_SLDT
ON HOIDONG_DT
FOR INSERT
AS
BEGIN
	IF (SELECT COUNT(*)
		FROM INSERTED, HOIDONG_DT
		WHERE INSERTED.MSHD = HOIDONG_DT.MSHD) > 10
		BEGIN
			ROLLBACK TRANSACTION
			RAISERROR (N'MỘT HỘI ĐỒNG KHÔNG QUÁ 10 ĐỀ TÀI', 16, 1)
			RETURN
		END
END
GO

--2.1 THỰC THI CÁC TRƯỜNG HỢP
INSERT INTO HOIDONG_DT VALUES (1, '97003', N'Được') --ERROR, TRIGGER ĐÚNG
INSERT INTO HOIDONG_DT VALUES (2, '97006', N'Được')

--2.2 KIỂM TRA DỮ LIỆU TRONG BẢNG
SELECT * FROM HOIDONG_DT

--2.3 KHÔI PHỤC DỮ LIỆU
DELETE FROM HOIDONG_DT WHERE MSHD = 2 AND MSDT = '97006'

--2.4 XÓA
DROP TRIGGER TRIG_INSERT_HDDT_SLDT

--3. Tạo Trigger thỏa mãn ràng buộc là một đề tài không quá 3 sinh viên. 
--Dùng “Group by” có được không? Giải thích.
CREATE TRIGGER TRIG_INSERT_SVDT_SLSV
ON SV_DETAI
FOR INSERT
AS
BEGIN
	IF (SELECT COUNT(*) 
	FROM INSERTED,SV_DETAI 
	WHERE INSERTED.MSDT = SV_DETAI.MSDT) > 3
	BEGIN
		ROLLBACK TRANSACTION
		RAISERROR (N'MỘT ĐỀ TÀI KHÔNG QUÁ 3 SINH VIÊN',16,1)
		RETURN
	END
END
GO

--3.1 THỰC THI
INSERT INTO SV_DETAI VALUES('13520001','97005')--OK
INSERT INTO SV_DETAI VALUES('13520002','97005')--LỖI VÌ QUÁ 3 SV

--3.2 KIỂM TRA
SELECT * FROM  SV_DETAI

--3.3 KHÔI PHỤC DỮ LIỆU
DELETE FROM SV_DETAI WHERE MSSV ='13520001' AND MSDT ='97005'

--3.4 XÓA
DROP TRIGGER TRIG_INSERT_SVDT_SLSV
GO

--4. Tạo Trigger thỏa mãn ràng buộc là một giáo viên muốn có học hàm 
--PGS phải là tiến sĩ.
CREATE TRIGGER TRIG_INSERT_UPDATED_GIAOVIEN
ON GIAOVIEN
FOR INSERT,UPDATE
AS
BEGIN
	IF EXISTS ( SELECT * FROM INSERTED WHERE MSHH=1 
											AND NOT EXISTS( SELECT * FROM GV_HV_CN WHERE INSERTED.MSGV=GV_HV_CN.MSGV  AND MSHV=4 ))
	BEGIN
		
		RAISERROR('GIÁO VIÊN CÓ HỌC HÀM PGS PHẢI LÀ TIẾN SĨ', 16, 1)
		ROLLBACK TRANSACTION
	END
END

--4.1 THỰC THI
INSERT INTO GIAOVIEN VALUES (00125, N'THU AN',N'ĐÀ NẴNG','93647586', 1, '2008')

--4.2 KIỂM TRA
SELECT * FROM  GIAOVIEN

--4.3 XÓA
DROP TRIGGER TRIG_INSERT_UPDATED_GIAOVIEN

GO
DROP TRIGGER TRIG_INSERT_UPDATED_GIAOVIEN



--D. FUNCTION
--1. Viết hàm tính điểm trung bình của một đề tài. 
--Giá trị trả về là điểm trung bình ứng với mã số đề tài nhập vào
GO
CREATE FUNCTION TINHDTB(@MSDT CHAR(6)) RETURNS FLOAT
AS
BEGIN
-- LOGIC
DECLARE @DTB FLOAT

IF EXISTS (SELECT * FROM DETAI WHERE MSDT = @MSDT)
BEGIN
SELECT @DTB = AVG(DIEM)
FROM
(SELECT * FROM GV_HDDT UNION
SELECT * FROM GV_PBDT UNION
SELECT * FROM GV_UVDT) AS DIEMTONGHOP
WHERE MSDT = @MSDT
END

IF @DTB IS NULL
SET @DTB = 0
RETURN @DTB
END
GO

-- KIEM TRA
SELECT DBO.TINHDTB('97005') AS DTB

--2. Trả về kết quả của đề tài theo MSDT nhập vào. Kết quả là DAT nếu như
--điểm trung bình từ 5 trở lên, và KHONGDAT nếu như điểm trung bình dưới 5.
CREATE FUNCTION DTB_DT_XET (@MSDT CHAR(6)) RETURNS NVARCHAR(20)
AS
BEGIN
	DECLARE @DTB FLOAT
	SELECT @DTB =AVG(DIEM)
	FROM (SELECT * FROM GV_HDDT UNION
		SELECT * FROM GV_PBDT UNION 
		SELECT * FROM GV_UVDT) AS DIEMTONGHOP
	WHERE  MSDT = @MSDT
	IF @DTB IS NULL
		SET @DTB = 0

	DECLARE @XET NVARCHAR(20)
	IF(@DTB<5)
		SET @XET = N'KHÔNG ĐẠT'
	ELSE
		SET @XET = N'ĐẠT'
	RETURN @XET
END

--2.1 KIỂM TRA

SELECT DBO.DTB_DT_XET('97001') AS KQ
--2.2 XÓA
DROP FUNCTION DTB_DT_XET

GO

--3*. Đưa vào MSDT, trả về mã số và họ tên của các sinh viên thực hiện đề tài.
CREATE FUNCTION MSDT_HOTEN_MS (@MSDT CHAR(6)) RETURNS TABLE
AS
	RETURN(SELECT SINHVIEN.MSSV,TENSV FROM SINHVIEN,SV_DETAI WHERE SINHVIEN.MSSV=SV_DETAI.MSSV AND MSDT = @MSDT)

--3.1 KIỂM TRA
SELECT * FROM  DBO.MSDT_HOTEN_MS('97001')
--3.2 XÓA
DROP FUNCTION MSDT_HOTEN_MS

GO



--E. CURSOR
--Tạo một bảng tên là DETAI_DIEM. Cấu trúc bảng như sau:
--DETAI_DIEM(MSDT, DIEMTB)

--1. Viết Cursor tính điểm trung bình cho từng đề tài. Sau đó lưu kết quả vào bảng DETAI_DIEM.
DECLARE @DUYET CURSOR @MSDT CHAR(6), @DTB FLOAT
SET @DUYET = CURSOR FOR SELECT MSDT FROM DETAI --LẤY DANH SÁCH
OPEN @DUYET
FETCH NEXT FROM @DUYET INTO @MSDT --ĐỌC DÒNG DỮ LIỆU ĐẦU TIÊN CỦA CON TRỎ @DUYET VÀ GÁN VÀO @MSDT
WHILE @@FETCH_STATUS = 0 --XEM CÒN DÒNG ĐỂ ĐỌC KHÔNG
BEGIN 
	SET @DTB = DBO.TINHDTB(@MSDT)
	INSERT INTO DETAI_DIEM VALUES (@MSDT, @DTB)
	FETCH NEXT FROM @DUYET INTO @MSDT --ĐỌC DÒNG TIẾP THEO
END
CLOSE @DUYET
DEALLOCATE @DUYET
GO

--1.1 KIỂM TRA
SELECT * FROM DETAI_DIEM

--2. Gom các bước xử lý của Cursor ở câu 1 vào một Stored Procedure.
CREATE PROCEDURE DETAI_DTB
AS
BEGIN
	DECLARE @MSDT CHAR(6)
	DECLARE @DIEMTB FLOAT

	DECLARE CUR_DIEM_DETAI CURSOR FOR 
	SELECT MSDT FROM DETAI

	OPEN CUR_DIEM_DETAI
	FETCH NEXT FROM CUR_DIEM_DETAI INTO @MSDT

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SELECT @DIEMTB = AVG(DIEM) FROM (
        SELECT DIEM FROM GV_HDDT WHERE MSDT = @MSDT
        UNION ALL
        SELECT DIEM FROM GV_PBDT WHERE MSDT = @MSDT
        UNION ALL
        SELECT DIEM FROM GV_UVDT WHERE MSDT = @MSDT
		) AS DIEM

		INSERT INTO DETAI_DIEM(MSDT, DIEMTB)
		VALUES(@MSDT, @DIEMTB)

		FETCH NEXT FROM CUR_DIEM_DETAI INTO @MSDT
	END

	CLOSE CUR_DIEM_DETAI
	DEALLOCATE CUR_DIEM_DETAI
END

--2.1 THỰC THI
DECLARE @DTB INT

EXEC DETAI_DTB @DTB OUT

--2.2 KIỂM TRA
SELECT * FROM DETAI_DIEM

--2.3 XÓA
DROP PROC DETAI_DTB
DROP TABLE DETAI_DIEM

GO

--3*. Tạo thêm cột XEPLOAI có kiểu là NVARCHAR(20) trong bảng
--DETAI_DIEM, viết Cursor cập nhật kết quả xếp loại cho mỗi đề tài như sau:
--+ "Xuất sắc": điểm trung bình từ 9 đến 10.
--+ "Giỏi": điểm trung bình từ 8 đến 9.
--+ "Khá": điểm trung bình từ 7 đến 8.
--+ "Trung bình": điểm trung bình từ 5 đến 6
--+ "Không đạt": điểm trung bình dưới 5.
CREATE TABLE DETAI_DIEM(
MSDT CHAR(6) PRIMARY KEY,
DIEMTB FLOAT
)
ALTER TABLE DETAI_DIEM ADD XEPLOAI NVARCHAR(20)

DECLARE @CURSORXL CURSOR ,@MSDT CHAR(6), @DTB FLOAT, @XEPLOAI NVARCHAR(20)
SET @CURSORXL = CURSOR FOR SELECT MSDT FROM DETAI
OPEN @CURSORXL
FETCH NEXT FROM @CURSORXL INTO @MSDT
WHILE(@@FETCH_STATUS = 0)
	BEGIN
		SELECT @DTB = AVG(DIEM)
		FROM(SELECT * FROM GV_HDDT UNION
			SELECT * FROM GV_PBDT UNION
			SELECT * FROM GV_UVDT) AS DIEMTB		
		WHERE MSDT = @MSDT
		IF( @DTB < 5)
			SET @XEPLOAI = N'Không đạt'
		ELSE IF( @DTB >= 5 AND  @DTB <= 6)
			SET @XEPLOAI = N'Trung bình'
		ELSE IF( @DTB >= 7 AND @DTB <8)
			SET @XEPLOAI = N'Khá'
		ELSE IF( @DTB >= 8 AND @DTB < 9)
			SET @XEPLOAI = N'Giỏi'
		ELSE
			SET @XEPLOAI = N'Xuất sắc'
		INSERT INTO DETAI_DIEM VALUES(@MSDT,@DTB,@XEPLOAI)
		FETCH NEXT FROM @CURSORXL INTO @MSDT
	END
CLOSE @CURSORXL
DEALLOCATE @CURSORXL

--3.1 KIỂM TRA
SELECT * FROM DETAI_DIEM

--3.2 XÓA
DROP TABLE DETAI_DIEM
